# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = ../bin/Debug-linux-x86_64/zxShaderViz
  TARGET = $(TARGETDIR)/zxShaderViz
  OBJDIR = ../bin/intermediates/Debug-linux-x86_64/zxShaderViz
  PCH = include/zxpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DZX_LINUX -DDEBUG
  INCLUDES += -Isrc -Iinclude -IThirdParty/glm -IThirdParty/Glad/include -IThirdParty/GLFW/include -IThirdParty/ImGui -IThirdParty/YAML/include
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ThirdParty/Glad/bin/Debug-linux-x86_64/Glad/libGlad.a ThirdParty/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a ThirdParty/ImGui/bin/Debug-linux-x86_64/ImGui/libImGui.a ThirdParty/YAML/bin/Debug-linux-x86_64/Yaml-cpp/libYaml-cpp.a
  LDDEPS += ThirdParty/Glad/bin/Debug-linux-x86_64/Glad/libGlad.a ThirdParty/GLFW/bin/Debug-linux-x86_64/GLFW/libGLFW.a ThirdParty/ImGui/bin/Debug-linux-x86_64/ImGui/libImGui.a ThirdParty/YAML/bin/Debug-linux-x86_64/Yaml-cpp/libYaml-cpp.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -pthread -lGL -ldl
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ../bin/Release-linux-x86_64/zxShaderViz
  TARGET = $(TARGETDIR)/zxShaderViz
  OBJDIR = ../bin/intermediates/Release-linux-x86_64/zxShaderViz
  PCH = include/zxpch.h
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DZX_LINUX -DZX_RELEASE -DNDEBUG
  INCLUDES += -Isrc -Iinclude -IThirdParty/glm -IThirdParty/Glad/include -IThirdParty/GLFW/include -IThirdParty/ImGui -IThirdParty/YAML/include
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ThirdParty/Glad/bin/Release-linux-x86_64/Glad/libGlad.a ThirdParty/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a ThirdParty/ImGui/bin/Release-linux-x86_64/ImGui/libImGui.a ThirdParty/YAML/bin/Release-linux-x86_64/Yaml-cpp/libYaml-cpp.a
  LDDEPS += ThirdParty/Glad/bin/Release-linux-x86_64/Glad/libGlad.a ThirdParty/GLFW/bin/Release-linux-x86_64/GLFW/libGLFW.a ThirdParty/ImGui/bin/Release-linux-x86_64/ImGui/libImGui.a ThirdParty/YAML/bin/Release-linux-x86_64/Yaml-cpp/libYaml-cpp.a
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s -pthread -lGL -ldl
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Application.o \
	$(OBJDIR)/FrameBuffer.o \
	$(OBJDIR)/ImGuiPanel.o \
	$(OBJDIR)/Panels.o \
	$(OBJDIR)/Renderer.o \
	$(OBJDIR)/Input.o \
	$(OBJDIR)/FileDialog.o \
	$(OBJDIR)/FileDialogs.o \
	$(OBJDIR)/Shader.o \
	$(OBJDIR)/Window.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/zxpch.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking zxShaderViz
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning zxShaderViz
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/Application.o: src/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FrameBuffer.o: src/FrameBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiPanel.o: src/ImGuiPanel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Panels.o: src/Panels.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: src/Utils/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileDialog.o: src/Utils/Platform/Linux/FileDialog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileDialogs.o: src/Utils/Platform/Windows/FileDialogs.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Utils/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/zxpch.o: src/zxpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif